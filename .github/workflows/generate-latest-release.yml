name: Generate Latest Release JSON

on:
  workflow_dispatch:

jobs:
  generate_latest_release_json:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get release data
      run: |
        LATEST_RELEASE=$(curl -s "https://api.github.com/repos/GovTechSG/purple-hats/releases/latest")
        ALL_RELEASES=$(curl -s "https://api.github.com/repos/GovTechSG/purple-hats/releases")
        LATEST_FE_RELEASE=$(curl -s "https://api.github.com/repos/GovTechSG/purple-hats-desktop/releases/latest")
        
        # Extract the latest release and pre-release tags
        LATEST_RELEASE_TAG=$(echo "$LATEST_RELEASE" | jq -r '.tag_name')
        LATEST_PRE_RELEASE_TAG=$(echo "$ALL_RELEASES" | jq -r '[.[] | select(.prerelease) | .tag_name] | first')
        LATEST_FE_RELEASE_TAG=$(echo "$LATEST_FE_RELEASE" | jq -r '.tag_name')
        
        # Extract all release and pre-release tags as comma-separated strings
        ALL_RELEASE_TAGS=$(echo "$ALL_RELEASES" | jq -r '[.[] | select(.prerelease | not) | .tag_name] | join(",")')
        ALL_PRE_RELEASE_TAGS=$(echo "$ALL_RELEASES" | jq -r '[.[] | select(.prerelease) | .tag_name] | join(",")')
        
        # Create the JSON file
        echo "{
          \"latestRelease\": \"$LATEST_RELEASE_TAG\",
          \"latestPreRelease\": \"$LATEST_PRE_RELEASE_TAG\",
          \"latestFrontendRelease\": \"$LATEST_FE_RELEASE_TAG\",
          \"allReleaseTags\": [$ALL_RELEASE_TAGS],
          \"allPreReleaseTags\": [$ALL_PRE_RELEASE_TAGS]
        }" > latest-release.json
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Show generated JSON
      run: cat latest-release.json

    - name: Commit JSON file
      run: |
        git config --global user.email "github-actions@github.com"
        git config --global user.name "GitHub Actions"

        git add latest-release.json
        git commit -m "Update latest-release.json"
        git push
